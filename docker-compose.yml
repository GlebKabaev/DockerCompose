services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:8081
    ports:
      - "9080:8080" # Dashboard Traefik
      - "8081:8081" # Вход для маршрутов
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - my_network

  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.localhost`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.http.middlewares.pgadmin-auth.basicauth.users=admin:$apr1$5fmyipsI$31X8B8satVnI/nN/tQO0P."
      - "traefik.http.routers.pgadmin.middlewares=pgadmin-auth"
    networks:
      - my_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my_java_app
    environment:
      DB_URL: jdbc:postgresql://postgres_db:5432/mydb
      DB_USER: user
      DB_PASSWORD: password
    depends_on:
      - postgres
    networks:
      - my_network

volumes:
  postgres_data:

networks:
  my_network:
    driver: bridge
